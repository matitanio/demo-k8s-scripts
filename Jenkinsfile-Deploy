pipeline {

    agent any
    stages {
        stage('Deploy'){

            steps{
            	script{
            		env.TIME_OUT = 60
            		env.VERSION = sh(script: 'helm search local/demo-k8s | cut -f2 | sed -n 2p',returnStdout: true).trim()
            		def completeChartName = "local/demo-k8s-${env.VERSION}.tgz"
            		println "Desplegando el chart [$completeChartName]"
            		sh "helm upgrade demo ${completeChartName} --wait --timeout ${env.TIME_OUT}"
            	}
            }
            post{
            	failure{
            		script{
            			def viejaVersion = sh(script: 'helm search local/demo-k8s | cut -f2 | sed -n 2p',returnStdout: true).trim()
						println "El deploy version [${env.VERSION}] fallo despues de esperar despues de esperar [${env.TIME_OUT}] segundos, la version [${viejaVersion} qued activa]"
            		}
            	}
            }
        }
    }
}